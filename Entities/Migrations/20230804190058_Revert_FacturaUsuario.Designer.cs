// <auto-generated />
using System;
using Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230804190058_Revert_FacturaUsuario")]
    partial class Revert_FacturaUsuario
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Models.Cliente", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Entities.Models.View.NXFCE100", b =>
                {
                    b.Property<string>("INTERID")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("INTERID");

                    b.Property<string>("AADIMCHANEL")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("AADIMCHANEL");

                    b.Property<string>("AAPROJECT")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("AAPROJECT");

                    b.Property<DateTime>("APFRDCDT")
                        .HasColumnType("datetime2")
                        .HasColumnName("APFRDCDT");

                    b.Property<string>("APFRDCNM")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .HasColumnName("APFRDCNM");

                    b.Property<decimal>("APPLDAMT")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("APPLDAMT");

                    b.Property<string>("AccountCosFisticio")
                        .IsRequired()
                        .HasMaxLength(129)
                        .HasColumnType("nvarchar(129)")
                        .HasColumnName("AccountCosFisticio");

                    b.Property<string>("AccountCost")
                        .IsRequired()
                        .HasMaxLength(129)
                        .HasColumnType("nvarchar(129)")
                        .HasColumnName("AccountCost");

                    b.Property<string>("AccountElimicion")
                        .IsRequired()
                        .HasMaxLength(129)
                        .HasColumnType("nvarchar(129)")
                        .HasColumnName("AccountElimicion");

                    b.Property<string>("AccountIngFisticio")
                        .IsRequired()
                        .HasMaxLength(129)
                        .HasColumnType("nvarchar(129)")
                        .HasColumnName("AccountIngFisticio");

                    b.Property<string>("AccountProv")
                        .IsRequired()
                        .HasMaxLength(129)
                        .HasColumnType("nvarchar(129)")
                        .HasColumnName("AccountProv");

                    b.Property<string>("AccountRecive")
                        .IsRequired()
                        .HasMaxLength(129)
                        .HasColumnType("nvarchar(129)")
                        .HasColumnName("AccountRecive");

                    b.Property<string>("AccountSales")
                        .IsRequired()
                        .HasMaxLength(129)
                        .HasColumnType("nvarchar(129)")
                        .HasColumnName("AccountSales");

                    b.Property<string>("AccountTrade")
                        .IsRequired()
                        .HasMaxLength(129)
                        .HasColumnType("nvarchar(129)")
                        .HasColumnName("AccountTrade");

                    b.Property<string>("BACHNUMB")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("BACHNUMB");

                    b.Property<string>("CURNCYID")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("CURNCYID");

                    b.Property<string>("CUSTNAME")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)")
                        .HasColumnName("CUSTNAME");

                    b.Property<string>("CUSTNMBR")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("CUSTNMBR");

                    b.Property<string>("CustVenID")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("CustVenID");

                    b.Property<DateTime>("DATEDONE")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATEDONE");

                    b.Property<DateTime>("DATERECD")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATERECD");

                    b.Property<int>("DEX_ROW_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DEX_ROW_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DEX_ROW_ID"), 1L, 1);

                    b.Property<DateTime>("DOCDATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("DOCDATE");

                    b.Property<string>("DOCDESCR")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("DOCDESCR");

                    b.Property<string>("DOCNUMBR")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .HasColumnName("DOCNUMBR");

                    b.Property<short>("ERROR")
                        .HasColumnType("smallint")
                        .HasColumnName("ERROR");

                    b.Property<string>("INVCNMBR")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .HasColumnName("INVCNMBR");

                    b.Property<string>("NGOAccountCred")
                        .IsRequired()
                        .HasMaxLength(129)
                        .HasColumnType("nvarchar(129)")
                        .HasColumnName("NGOAccountCred");

                    b.Property<string>("NGOAccountDeb")
                        .IsRequired()
                        .HasMaxLength(129)
                        .HasColumnType("nvarchar(129)")
                        .HasColumnName("NGOAccountDeb");

                    b.Property<short>("NUMOCPIS")
                        .HasColumnType("smallint")
                        .HasColumnName("NUMOCPIS");

                    b.Property<string>("RATETPID")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("RATETPID");

                    b.Property<short>("RMDTYPAL")
                        .HasColumnType("smallint")
                        .HasColumnName("RMDTYPAL");

                    b.Property<string>("SHIPMTHD")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("SHIPMTHD");

                    b.Property<string>("SHRTNAME")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("SHRTNAME");

                    b.Property<string>("TAXSCHID")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("TAXSCHID");

                    b.Property<decimal>("Total_Sales")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("Total_Sales");

                    b.Property<string>("VALUEPROJECT")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("VALUEPROJECT");

                    b.HasKey("INTERID");

                    b.ToTable("NXFCE100", (string)null);
                });

            modelBuilder.Entity("Entities.Models.View.NXFCE101", b =>
                {
                    b.Property<string>("IdBookingLine")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("IdBookingLine");

                    b.Property<decimal>("AMNTPAID")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("AMNTPAID");

                    b.Property<decimal>("Amount_Received")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("Amount_Received");

                    b.Property<string>("AnalyticCode")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("AnalyticCode");

                    b.Property<string>("BookingCode")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("BookingCode");

                    b.Property<string>("CMPNYNUM")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("CMPNYNUM");

                    b.Property<decimal>("COMMAMNT")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("COMMAMNT");

                    b.Property<string>("CURNCYID")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("CURNCYID");

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("Client");

                    b.Property<int>("DEX_ROW_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DEX_ROW_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DEX_ROW_ID"), 1L, 1);

                    b.Property<decimal>("DOCAMNT")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("DOCAMNT");

                    b.Property<string>("DOCNUMBR")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .HasColumnName("DOCNUMBR");

                    b.Property<string>("ExSLCode")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("ExSLCode");

                    b.Property<string>("ExSaCoMCod")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("ExSaCoMCod");

                    b.Property<string>("ExtPurchCode")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("ExtPurchCode");

                    b.Property<string>("INTERID")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("INTERID");

                    b.Property<string>("INVCNMBR")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .HasColumnName("INVCNMBR");

                    b.Property<string>("PaxNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("PaxNumber");

                    b.Property<string>("ProductGroup")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("ProductGroup");

                    b.Property<string>("REFRENCE")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("REFRENCE");

                    b.Property<short>("RMDTYPAL")
                        .HasColumnType("smallint")
                        .HasColumnName("RMDTYPAL");

                    b.Property<decimal>("TOTALPAY")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("TOTALPAY");

                    b.Property<decimal>("TRDISAMT")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("TRDISAMT");

                    b.HasKey("IdBookingLine");

                    b.ToTable("NXFCE101", (string)null);
                });

            modelBuilder.Entity("Entities.Models.View.NXFCE102", b =>
                {
                    b.Property<string>("IdBookingLine")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("IdBookingLine");

                    b.Property<string>("ACTNUMST")
                        .IsRequired()
                        .HasMaxLength(129)
                        .HasColumnType("nvarchar(129)")
                        .HasColumnName("ACTNUMST");

                    b.Property<int>("DEX_ROW_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DEX_ROW_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DEX_ROW_ID"), 1L, 1);

                    b.Property<string>("DOCNUMBR")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .HasColumnName("DOCNUMBR");

                    b.Property<string>("INTERID")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("INTERID");

                    b.Property<string>("INVCNMBR")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .HasColumnName("INVCNMBR");

                    b.Property<string>("ProductGroup")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .HasColumnName("ProductGroup");

                    b.Property<short>("RMDTYPAL")
                        .HasColumnType("smallint")
                        .HasColumnName("RMDTYPAL");

                    b.Property<decimal>("STAXAMNT")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("STAXAMNT");

                    b.Property<decimal>("TAXAMNT")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("TAXAMNT");

                    b.Property<string>("TAXDTLID")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("TAXDTLID");

                    b.Property<decimal>("TAXDTSLS")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("TAXDTSLS");

                    b.HasKey("IdBookingLine");

                    b.ToTable("NXFCE102", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.Models.Cliente", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Cliente", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.Models.Cliente", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
